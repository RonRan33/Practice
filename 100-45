# 係り受け解析
parse_neko()

# 結果ファイル作成
with open(fname_result, mode='w') as out_file:

    # 1文ずつリスト作成
    for chunks in neco_lines():

        # chunkを列挙
        for chunk in chunks:

            # 動詞を含むかチェック
            verbs = chunk.get_morphs_by_pos('動詞')
            if len(verbs) < 1:
                continue

            # 係り元の列挙
            prts = []
            for src in chunk.srcs:

                # 助詞を検索
                prts_in_chunk = chunks[src].get_morphs_by_pos('助詞')
                if len(prts_in_chunk) > 1:

                    # Chunk内に2つ以上助詞がある場合は、格助詞を優先
                    kaku_prts = chunks[src].get_morphs_by_pos('助詞', '格助詞')
                    if len(kaku_prts) > 0:
                        prts_in_chunk = kaku_prts

                if len(prts_in_chunk) > 0:
                    prts.append(prts_in_chunk[-1])  # 抽出する助詞はChunk当たり最後の1つ

            if len(prts) < 1:
                continue

            # 出力
            out_file.write('{}\t{}\n'.format(
                verbs[0].base,      # 最左の動詞の基本系
                ' '.join(sorted(prt.surface for prt in prts))   # 助詞は辞書順
            ))
